{"version":3,"sources":["filterBiggest.js"],"names":["filterBiggestNumbers","numbers","min","Array","isArray","Error","filter","val","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAT,CAA8BC,OAAO,GAAG,EAAxC,EAA4CC,GAAG,GAAG,CAAlD,EAAqD;AACnD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAL,EAA6B;AAC3B,UAAMI,KAAK,CAAC,qCAAD,CAAX;AACD;;AAED,MAAI,OAAOH,GAAP,IAAc,QAAlB,EAA4B;AAC1B,UAAMG,KAAK,CAAC,sCAAD,CAAX;AACD;;AAED,SAAOJ,OAAO,CAACK,MAAR,CAAgBC,GAAD,IAASA,GAAG,GAAGL,GAA9B,CAAP;AACD;;AAEDM,MAAM,CAACC,OAAP,GAAiBT,oBAAjB","sourcesContent":["/**\n * Given an array it returns the numbers bigger than a given minimum\n * @param {Array} numbers\n * @param {Number} min\n * @return {Array}\n * @example\n * ([1, -3, 8, 7]) -> [1, 8, 7]\n * ([3, 5, 9], 4) -> [5, 9]\n */\nfunction filterBiggestNumbers(numbers = [], min = 0) {\n  if (!Array.isArray(numbers)) {\n    throw Error(\"The first argument must be an array\");\n  }\n\n  if (typeof min != \"number\") {\n    throw Error(\"The second argument must be a number\");\n  }\n\n  return numbers.filter((val) => val > min);\n}\n\nmodule.exports = filterBiggestNumbers;\n"]}