b8c4951135d4c0e2da5547ce89a0c68f
const add = require("./add"); // Exercise 1


test("Test that add returns the correct result from two numbers", () => {
  // ✅ Use the add function to add two numbers
  // ✅ Expect the value toBe the right value
  expect(add(4, 2)).toBe(6);
}); // Exercise 2

test("Test that the add works with negative numbers", () => {
  // ✅ Use the add function to add two numbers with at least one of them negative
  // ✅ Expect the value toBe the right value
  expect(add(-2, -5)).toBe(-7);
}); // Exercise 3

test("Test that there will be an error if you pass in non-numbers", () => {
  // ✅ Use the add function to add two values with at least one of them not a number
  // ✅ Expect the function to throw
  expect(() => add("4", true)).toThrowError();
  expect(() => add(9, [])).toThrowError();
  expect(() => add(5, {})).toThrowError();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC50ZXN0LmpzIl0sIm5hbWVzIjpbImFkZCIsInJlcXVpcmUiLCJ0ZXN0IiwiZXhwZWN0IiwidG9CZSIsInRvVGhyb3dFcnJvciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsR0FBRyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFuQixDLENBRUE7OztBQUNBQyxJQUFJLENBQUMsMkRBQUQsRUFBOEQsTUFBTTtBQUN0RTtBQUNBO0FBQ0FDLEVBQUFBLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDLENBQUQsRUFBSSxDQUFKLENBQUosQ0FBTixDQUFrQkksSUFBbEIsQ0FBdUIsQ0FBdkI7QUFDRCxDQUpHLENBQUosQyxDQU1BOztBQUNBRixJQUFJLENBQUMsK0NBQUQsRUFBa0QsTUFBTTtBQUMxRDtBQUNBO0FBQ0FDLEVBQUFBLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDLENBQUMsQ0FBRixFQUFLLENBQUMsQ0FBTixDQUFKLENBQU4sQ0FBb0JJLElBQXBCLENBQXlCLENBQUMsQ0FBMUI7QUFDRCxDQUpHLENBQUosQyxDQU1BOztBQUNBRixJQUFJLENBQUMsNkRBQUQsRUFBZ0UsTUFBTTtBQUN4RTtBQUNBO0FBQ0FDLEVBQUFBLE1BQU0sQ0FBQyxNQUFNSCxHQUFHLENBQUMsR0FBRCxFQUFNLElBQU4sQ0FBVixDQUFOLENBQTZCSyxZQUE3QjtBQUNBRixFQUFBQSxNQUFNLENBQUMsTUFBTUgsR0FBRyxDQUFDLENBQUQsRUFBSSxFQUFKLENBQVYsQ0FBTixDQUF5QkssWUFBekI7QUFDQUYsRUFBQUEsTUFBTSxDQUFDLE1BQU1ILEdBQUcsQ0FBQyxDQUFELEVBQUksRUFBSixDQUFWLENBQU4sQ0FBeUJLLFlBQXpCO0FBQ0QsQ0FORyxDQUFKIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYWRkID0gcmVxdWlyZShcIi4vYWRkXCIpO1xuXG4vLyBFeGVyY2lzZSAxXG50ZXN0KFwiVGVzdCB0aGF0IGFkZCByZXR1cm5zIHRoZSBjb3JyZWN0IHJlc3VsdCBmcm9tIHR3byBudW1iZXJzXCIsICgpID0+IHtcbiAgLy8g4pyFIFVzZSB0aGUgYWRkIGZ1bmN0aW9uIHRvIGFkZCB0d28gbnVtYmVyc1xuICAvLyDinIUgRXhwZWN0IHRoZSB2YWx1ZSB0b0JlIHRoZSByaWdodCB2YWx1ZVxuICBleHBlY3QoYWRkKDQsIDIpKS50b0JlKDYpO1xufSk7XG5cbi8vIEV4ZXJjaXNlIDJcbnRlc3QoXCJUZXN0IHRoYXQgdGhlIGFkZCB3b3JrcyB3aXRoIG5lZ2F0aXZlIG51bWJlcnNcIiwgKCkgPT4ge1xuICAvLyDinIUgVXNlIHRoZSBhZGQgZnVuY3Rpb24gdG8gYWRkIHR3byBudW1iZXJzIHdpdGggYXQgbGVhc3Qgb25lIG9mIHRoZW0gbmVnYXRpdmVcbiAgLy8g4pyFIEV4cGVjdCB0aGUgdmFsdWUgdG9CZSB0aGUgcmlnaHQgdmFsdWVcbiAgZXhwZWN0KGFkZCgtMiwgLTUpKS50b0JlKC03KTtcbn0pO1xuXG4vLyBFeGVyY2lzZSAzXG50ZXN0KFwiVGVzdCB0aGF0IHRoZXJlIHdpbGwgYmUgYW4gZXJyb3IgaWYgeW91IHBhc3MgaW4gbm9uLW51bWJlcnNcIiwgKCkgPT4ge1xuICAvLyDinIUgVXNlIHRoZSBhZGQgZnVuY3Rpb24gdG8gYWRkIHR3byB2YWx1ZXMgd2l0aCBhdCBsZWFzdCBvbmUgb2YgdGhlbSBub3QgYSBudW1iZXJcbiAgLy8g4pyFIEV4cGVjdCB0aGUgZnVuY3Rpb24gdG8gdGhyb3dcbiAgZXhwZWN0KCgpID0+IGFkZChcIjRcIiwgdHJ1ZSkpLnRvVGhyb3dFcnJvcigpO1xuICBleHBlY3QoKCkgPT4gYWRkKDksIFtdKSkudG9UaHJvd0Vycm9yKCk7XG4gIGV4cGVjdCgoKSA9PiBhZGQoNSwge30pKS50b1Rocm93RXJyb3IoKTtcbn0pO1xuIl19